################################################################
# Global configuration
################################################################
global:
  checkNewVersion: true
  sendAnonymousUsage: true

################################################################
# EntryPoints configuration
################################################################

entryPoints:
  web:
    address: :80
    http:
      redirections:
        entryPoint:
          to: websecure

  websecure:
    address: :443
    http:
      middlewares:
        - secureHeaders@file
      tls:
        certResolver: letsencrypt

################################################################
# Traefik logs configuration
################################################################

# Traefik logs
# Enabled by default and log to stdout
#
# Optional
#
log:
  # Log level
  #
  # Optional
  # Default: "ERROR"
  #
  #  level: DEBUG

  # Sets the filepath for the traefik log. If not specified, stdout will be used.
  # Intermediate directories are created if necessary.
  #
  # Optional
  # Default: os.Stdout
  #
  filePath:
    log/traefik.log

    # Format is either "json" or "common".
    #
    # Optional
    # Default: "common"
    #
    # format: json

    # Log Level
    #
    # Optional
    # Default: "ERROR"
    # level: DEBUG

################################################################
# Access logs configuration
################################################################

# Enable access logs
# By default it will write to stdout and produce logs in the textual
# Common Log Format (CLF), extended with additional fields.
#
# Optional
#
accessLog:
  # Sets the file path for the access log. If not specified, stdout will be used.
  # Intermediate directories are created if necessary.
  #
  # Optional
  # Default: os.Stdout
  #
  filePath: log/access.log
  filters:
    statusCodes:
      - '400-499'
    retryAttempts: true
    minDuration: '10ms'

    # Format is either "json" or "common".
    #
    # Optional
    # Default: "common"
    #
#  format: json

################################################################
# API and dashboard configuration
################################################################

api:
  # Enable the API in insecure mode
  #
  # Optional
  # Default: false
  #
  # insecure: true

  # Enabled Dashboard
  #
  # Optional
  # Default: true
  #
  dashboard: true

################################################################
# Docker configuration backend
################################################################

providers:
  # Enable Docker configuration backend
  docker:
    # Docker server endpoint. Can be a tcp or a unix socket endpoint.
    #
    # Required
    # Default: "unix:///var/run/docker.sock"
    #
    endpoint: 'unix:///var/run/docker.sock'

    # Docker network
    # Defines a default docker network to use for connections to all containers.
    # Optional
    # Default=empty
    network: proxy

    # Default host rule.
    #
    # Optional
    # Default: "Host(`{{ normalize .Name }}`)"
    #
    #    defaultRule: Host(`{{ normalize .Name }}.docker.localhost`)

    # Expose containers by default in traefik
    #
    # Optional
    # Default: true
    #
    exposedByDefault: false
  file:
    filename: configurations/dynamic.yml

################################################################
# Certificate Resolver Configuration
################################################################
# see https://doc.traefik.io/traefik/https/acme/#certificate-resolvers

certificatesResolvers:
  letsencrypt:
    acme:
      email: 'INPUT HERE YOUR EMAIL'
      storage: letsencrypt/acme.json
      keyType: EC384
      # CA server to use.
      # Uncomment the line to use Let's Encrypt's staging server,
      # leave commented to go to prod.
      caServer: 'https://acme-staging-v02.api.letsencrypt.org/directory'
      httpChallenge:
        entryPoint: web
